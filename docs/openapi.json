{
    "openapi": "3.0.0",
    "info": {
        "title": "Shared Service Layer - Search",
        "description": "The API for the Search Project",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "{protocol}://{host}/v1",
            "variables": {
                "protocol": {
                    "default": "https"
                },
                "host": {
                    "default": "catalyst-search.herokuapp.com"
                }
            }
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "locations",
            "description": "Routes for working with locations stored in the service."
        },
        {
            "name": "articles",
            "description": "Routes for working with articles stored in the service."
        }
    ],
    "paths": {
        "/locations": {
            "post": {
                "operationId": "addLocationToSearchIndex",
                "summary": "Add a new location to the data store and search index.",
                "description": "An API token must have the `write` permission to be able to perform actions against this route.",
                "tags": ["locations"],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/sensitive"
                    },
                    {
                        "$ref":"#/components/parameters/streetAddress"
                    },
                    {
                        "$ref": "#/components/parameters/addressRegion"
                    },
                    {
                        "$ref": "#/components/parameters/addressLocality"
                    },
                    {
                        "$ref": "#/components/parameters/addressCountry"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/latitude"
                    },
                    {
                        "$ref": "#/components/parameters/longitude"
                    },
                    {
                        "$ref": "#/components/parameters/locationDescription"
                    },
                    {
                        "$ref": "#/components/parameters/photoUrl"
                    },
                    {
                        "$ref": "#/components/parameters/photoDescription"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created. Location added to data store and search index.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationObject"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/responseMetaCreated"
                                        },
                                        "links": {
                                            "type": "object",
                                            "description": "Links to other operations that can be performed with the created entity.",
                                            "example": {
                                                "get_location": {
                                                    "type": "GET",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/locations/17"
                                                },
                                                "update_location": {
                                                    "type": "PUT",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/locations/17"
                                                },
                                                "delete_location": {
                                                    "type": "DELETE",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/locations/17"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "405": {
                        "$ref": "#/components/responses/405"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/locations/search": {
            "get": {
                "operationId": "searchLocations",
                "summary": "Run a search against the locations search index.",
                "description": "All results are ordered by distance from the location given in the `query` parameter, going from nearest to furthest.",
                "tags": ["locations"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "by",
                        "description": "Options are `free-query`, `postcode` and `coords`. See the `query` parameter for details on each option.",
                        "schema": {
                            "type": "string"
                        },
                        "required":  true,
                        "example": "postcode"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "If `by=free-query`, this expects an address string such as `query=32 Oldham Street, Manchester`. Using commas to split address lines is encouraged.\n\nIf `by=postcode`, this expects any valid UK postcode.\n\nIf `by=coords`, this expects a latitude/longitude string. For example, `query=53.482813,-2.235183`.",
                        "schema": {
                            "type": "string"
                        },
                        "required":  true,
                        "example": "M1 1JN"
                    },
                    {
                        "in": "query",
                        "name": "boundingShapeId",
                        "description": "Cannot be included if `boundingShape` or `distance` have also been sent with the request.\n\nIt's possible to store geo-shapes in the service for easy reference when searching locations. Provide the ID of the shape with a location search query to constrain your search to within the shape's coordinates.",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    },
                    {
                        "in": "query",
                        "name": "boundingShape",
                        "description": "Cannot be included if `boundingShapeId` or `distance` have also been sent with the request.\n\nConstrain the search to the given bounding shape. Expects a string generated with the [Polyline algorithm](https://developers.google.com/maps/documentation/utilities/polylinealgorithm) that represents a geo-shape. The geo-shape must be a polygon with at least 4 sides, and its first and last points must be identical (so a 4-sided shape will have 5 points).",
                        "schema": {
                            "type": "string"
                        },
                        "example": "_b{~HnjoJ?_ibE~bmA??~hbE_cmA?"
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "description": "Cannot be included if `boundingShape` or `boundingShapeId` have also been sent with the request.\n\nConstrain the search to the given distance in miles. This will be the default constraint if no constraints have been provided with the request, the value of which is set in the service's configuration.",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "20"
                    },
                    {
                        "in": "query",
                        "name": "results",
                        "description": "The number of results to return per page. The default is set in the service's configuration.",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "10"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of results to send in the response.",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "description": "An array of location objects, in order of nearest to furthest to the query location. An empty array if the search returns no results.",
                                            "example": [
                                                {
                                                    "@context": "https://schema.org",
                                                    "@type": "Place",
                                                    "description": "An Oxfam charity shop",
                                                    "sensitive": true,
                                                    "updated_at": "2021-06-04T11:25:43.000000Z",
                                                    "created_at": "2021-06-04T11:25:43.000000Z",
                                                    "id": 17,
                                                    "address": {
                                                        "@context": "https://schema.org",
                                                        "@type": "PostalAddress",
                                                        "streetAddress": "8-10 Oldham Street",
                                                        "addressRegion": "Manchester",
                                                        "addressLocality": "Greater Manchester",
                                                        "addressCountry": "United Kingdom",
                                                        "postalCode": "M1 1JQ"
                                                    },
                                                    "geo": {
                                                        "@context": "https://schema.org",
                                                        "@type": "GeoCoordinates",
                                                        "coordinates": {
                                                            "lat": 53.481940,
                                                            "lon": -2.235999
                                                        }
                                                    },
                                                    "photo": {
                                                        "@context": "https://schema.org",
                                                        "@type": "ImageObject",
                                                        "contentUrl": "https://via.placeholder.com/300x400.png",
                                                        "description": "A placeholder image."
                                                    }
                                                },
                                                {
                                                    "@context": "https://schema.org",
                                                    "@type": "Place",
                                                    "...": "..."
                                                },
                                                {
                                                    "@context": "https://schema.org",
                                                    "@type": "Place",
                                                    "...": "..."
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/responseMetaWithPagination"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/responseEmptyObject"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "operationId": "getLocationById",
                "summary": "Retrieve a location from the data store.",
                "tags": ["locations"],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idAsPath"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationObject"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/responseMetaOk"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/responseEmptyObject"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "put": {
                "operationId": "updateLocationById",
                "summary": "Update the details of a location in the data store.",
                "description": "An API token must have the `write` permission to be able to perform actions against this route.",
                "tags": ["locations"],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idAsPath"
                    },
                    {
                        "$ref": "#/components/parameters/sensitive"
                    },
                    {
                        "$ref":"#/components/parameters/streetAddress"
                    },
                    {
                        "$ref": "#/components/parameters/addressRegion"
                    },
                    {
                        "$ref": "#/components/parameters/addressLocality"
                    },
                    {
                        "$ref": "#/components/parameters/addressCountry"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/latitude"
                    },
                    {
                        "$ref": "#/components/parameters/longitude"
                    },
                    {
                        "$ref": "#/components/parameters/locationDescription"
                    },
                    {
                        "$ref": "#/components/parameters/photoUrl"
                    },
                    {
                        "$ref": "#/components/parameters/photoDescription"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok. The data of the location with the given ID has been updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationObject"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/responseMetaOk"
                                        },
                                        "links": {
                                            "type": "object",
                                            "description": "Links to other operations that can be performed with the created entity.",
                                            "example": {
                                                "get_location": {
                                                    "type": "GET",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/locations/17"
                                                },
                                                "delete_location": {
                                                    "type": "DELETE",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/locations/17"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "delete": {
                "operationId": "deleteLocationById",
                "summary": "Delete a location from the data store and the search index.",
                "description": "An API token must have the `write` permission to be able to perform actions against this route.",
                "tags": ["locations"],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idAsPath"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok. The location with the given ID has been deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/responseEmptyObject"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/responseMetaOk"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/responseEmptyObject"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/articles": {
            "post": {
                "operationId": "addArticleToSearchIndex",
                "summary": "Add a new article to the data store and search index.",
                "description": "An API token must have the `write` permission to be able to perform actions against this route.",
                "tags": ["articles"],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/sensitive"
                    },
                    {
                        "$ref": "#/components/parameters/articleBody"
                    },
                    {
                        "$ref":"#/components/parameters/abstract"
                    },
                    {
                        "$ref": "#/components/parameters/author"
                    },
                    {
                        "$ref": "#/components/parameters/publisher"
                    },
                    {
                        "$ref": "#/components/parameters/datePublished"
                    },
                    {
                        "$ref": "#/components/parameters/thumbnailUrl"
                    },
                    {
                        "$ref": "#/components/parameters/keywords"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created. Article added to data store and search index.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ArticleObject"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/responseMetaCreated"
                                        },
                                        "links": {
                                            "type": "object",
                                            "description": "Links to other operations that can be performed with the created entity.",
                                            "example": {
                                                "get_location": {
                                                    "type": "GET",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/articles/17"
                                                },
                                                "update_location": {
                                                    "type": "PUT",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/articles/17"
                                                },
                                                "delete_location": {
                                                    "type": "DELETE",
                                                    "href": "https://catalyst-search.herokuapp.com/v1/articles/17"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "405": {
                        "$ref": "#/components/responses/405"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes" : {
            "bearerAuth" : {
                "type" : "http",
                "scheme" : "bearer",
                "description" : "Authorization: Bearer <token>"
            }
        },
        "parameters": {
            "idAsPath": {
                "in": "path",
                "name": "id",
                "schema": {
                    "type": "integer",
                    "minimum": 1
                },
                "required":  true,
                "example": 17
            },
            "sensitive": {
                "in": "query",
                "name": "sensitive",
                "description": "Flag the object as sensitive.",
                "schema": {
                    "$ref": "#/components/schemas/objectSensitive"
                },
                "required": false
            },
            "streetAddress": {
                "in": "query",
                "name": "streetAddress",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "example": "8-10 Oldham Street"
            },
            "addressRegion": {
                "in": "query",
                "name": "addressRegion",
                "description": "Typically a city, e.g. Salford.",
                "schema": {
                    "type": "string"
                },
                "example": "Manchester"
            },
            "addressLocality": {
                "in": "query",
                "name": "addressLocality",
                "description": "Typically a county, e.g. Greater Manchester.",
                "schema": {
                    "type": "string"
                },
                "example": "Greater Manchester"
            },
            "addressCountry": {
                "in": "query",
                "name": "addressCountry",
                "schema": {
                    "type": "string"
                },
                "required":  true,
                "example": "United Kingdom"
            },
            "postalCode": {
                "in": "query",
                "name": "postalCode",
                "schema": {
                    "type": "string"
                },
                "required":  true,
                "example": "M1 1JQ"
            },
            "latitude": {
                "in": "query",
                "name": "latitude",
                "schema": {
                    "type": "number",
                    "format": "float"
                },
                "required":  true,
                "example": 53.481940
            },
            "longitude": {
                "in": "query",
                "name": "longitude",
                "schema": {
                    "type": "number",
                    "format": "float"
                },
                "required":  true,
                "example": -2.235999
            },
            "locationDescription": {
                "in": "query",
                "name": "description",
                "schema": {
                    "type": "string"
                },
                "example": "An Oxfam charity shop"
            },
            "photoUrl": {
                "in": "query",
                "name": "photoUrl",
                "schema": {
                    "type": "string"
                },
                "example": "https://via.placeholder.com/300x400.png"
            },
            "photoDescription": {
                "in": "query",
                "name": "photoDescription",
                "schema": {
                    "type": "string"
                },
                "example": "A placeholder image."
            },
            "articleBody": {
                "in": "query",
                "name": "articleBody",
                "schema": {
                    "$ref": "#/components/schemas/objectArticleBody"
                },
                "required": true
            },
            "abstract": {
                "in":  "query",
                "name": "abstract",
                "schema": {
                    "$ref": "#/components/schemas/objectAbstract"
                },
                "required": true
            },
            "author": {
                "in":  "query",
                "name": "author",
                "schema": {
                    "$ref": "#/components/schemas/objectAuthor"
                },
                "required": true
            },
            "publisher": {
                "in":  "query",
                "name": "publisher",
                "schema": {
                    "$ref": "#/components/schemas/objectPublisher"
                },
                "required": true
            },
            "datePublished": {
                "in":  "query",
                "name": "datePublished",
                "schema": {
                    "$ref": "#/components/schemas/objectDatePublished"
                },
                "required": true
            },
            "thumbnailUrl": {
                "in":  "query",
                "name": "thumbnailUrl",
                "schema": {
                    "type": "string",
                    "description": "A URL to a featured image for the article.",
                    "example": "https://via.placeholder.com/300x400.png",
                    "nullable": true
                }
            },
            "keywords": {
                "in":  "query",
                "name": "keywords",
                "schema": {
                    "$ref": "#/components/schemas/objectKeywords"
                }
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request. Typically a validation error with the parameters provided.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                },
                                "meta": {
                                    "type": "object",
                                    "description": "Information about the response itself. Error information will be provided in either/both the 'error' and 'field_errors' objects.",
                                    "example": {
                                        "status_code": 400,
                                        "error": {
                                            "error_type": "validation_error",
                                            "error_message": "The data provided was invalid. The request has not been fulfilled."
                                        },
                                        "field_errors": {
                                            "field_name": "Error description"
                                        }
                                    }
                                },
                                "links": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                }
                            }
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorised. You are not authorised to consume this API. Either you didn't provide an API token or the one you provided is invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                },
                                "meta": {
                                    "type": "object",
                                    "description": "",
                                    "example": {
                                        "status_code": 401,
                                        "error": {
                                            "error_type": "unauthorised",
                                            "error_message": "You are not authorised to consume this API"
                                        }
                                    }
                                },
                                "links": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                }
                            }
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden. You are not allowed to perform this operation, your API token does not possess the correct permission.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                },
                                "meta": {
                                    "type": "object",
                                    "description": "Information about the response itself.",
                                    "example": {
                                        "status_code": 403,
                                        "error": {
                                            "error_type": "incorrect_permission",
                                            "error_message": "You do not have the permission required to take this action"
                                        }
                                    }
                                },
                                "links": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                }
                            }
                        }
                    }
                }
            },
            "404": {
                "description": "Not Found. The resource you requested was not found by the service.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                },
                                "meta": {
                                    "type": "object",
                                    "description": "Information about the response itself.",
                                    "example": {
                                        "status_code": 404,
                                        "error": {
                                            "error_type": "not_found",
                                            "error_message": "No record was found with the given ID"
                                        }
                                    }
                                },
                                "links": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                }
                            }
                        }
                    }
                }
            },
            "405": {
                "description": "Method Not Allowed. The request method used is not allowed against this request's route.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                },
                                "meta": {
                                    "type": "object",
                                    "description": "Information about the response itself.",
                                    "example": {
                                        "status_code": 405,
                                        "error": {
                                            "error_type": "method_not_allowed",
                                            "error_message": "The [request method] method is not supported for this route. Supported methods: [list of allowed methods]."
                                        }
                                    }
                                },
                                "links": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                }
                            }
                        }
                    }
                }
            },
            "500": {
                "description": "Unexpected error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                },
                                "meta": {
                                    "type": "object",
                                    "description": "Information about the response itself.",
                                    "example": {
                                        "status_code": 500,
                                        "error": {
                                            "error_type": "internal_error",
                                            "error_message": "An unknown error has occurred on the service."
                                        }
                                    }
                                },
                                "links": {
                                    "$ref": "#/components/schemas/responseEmptyObject"
                                }
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "responseMetaOk": {
                "type": "object",
                "description": "Information about the response itself.",
                "example": {
                    "status_code": 200
                }
            },
            "responseMetaCreated": {
                "type": "object",
                "description": "Information about the response itself.",
                "example": {
                    "status_code": 201
                }
            },
            "responseEmptyObject": {
                "type": "object",
                "description": "Empty object"
            },
            "responseMetaWithPagination": {
                "type": "object",
                "description": "Information about the response itself.",
                "example": {
                    "status_code": 200,
                    "pagination": {
                        "current_page": 1,
                        "per_page": 10,
                        "total_pages": 3,
                        "total_entries": 21,
                        "first_page": "https://catalyst-search.herokuapp.com/v1/original/request/route?query=original%20query&page=1",
                        "last_page": "https://catalyst-search.herokuapp.com/v1/original/request/route?query=original%20query&page=3",
                        "next_page": "https://catalyst-search.herokuapp.com/v1/original/request/route?query=original%20query&page=2",
                        "prev_page": ""
                    }
                }
            },
            "objectSensitive": {
                "type": "integer",
                "default": 0,
                "example": 1
            },
            "objectCreatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date that the object was introduced into the data store.",
                "example": "2021-04-27T11:15:00.062Z"
            },
            "objectAuthor": {
                "type": "string",
                "description": "The name of the content's author(s).",
                "example": "Alex Tani"
            },
            "objectArticleBody": {
                "type": "string",
                "description": "The full content of the article.",
                "example": "[The full content of the article]"
            },
            "objectAbstract": {
                "type": "string",
                "description": "An excerpt from or short summary of the content.",
                "example": "[An excerpt from or short summary of the content]"
            },
            "objectPublisher": {
                "type": "string",
                "description": "The publishing body or the organisation/individual that owns the content.",
                "example": "Charity Org"
            },
            "objectDatePublished": {
                "type": "string",
                "description": "Must be in the format 'Y-m-d H:i:s'.",
                "example": "2021-04-27 11:08:00"
            },
            "objectKeywords": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "example": [
                    "volunteering",
                    "trustees",
                    "board"
                ]
            },
            "objectUpdatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date that the object was last updated in the data store.",
                "example": "2021-04-27T16:31:00.062Z"
            },
            "LocationObject": {
                "type": "object",
                "description": "Populated with the processed location data.",
                "example": {
                    "@context": "https://schema.org",
                    "@type": "Place",
                    "description": "An Oxfam charity shop",
                    "sensitive": true,
                    "updated_at": "2021-06-04T11:25:43.000000Z",
                    "created_at": "2021-06-04T11:25:43.000000Z",
                    "id": 17,
                    "address": {
                        "@context": "https://schema.org",
                        "@type": "PostalAddress",
                        "streetAddress": "8-10 Oldham Street",
                        "addressRegion": "Manchester",
                        "addressLocality": "Greater Manchester",
                        "addressCountry": "United Kingdom",
                        "postalCode": "M1 1JQ"
                    },
                    "geo": {
                        "@context": "https://schema.org",
                        "@type": "GeoCoordinates",
                        "coordinates": {
                            "lat": 53.481940,
                            "lon": -2.235999
                        }
                    },
                    "photo": {
                        "@context": "https://schema.org",
                        "@type": "ImageObject",
                        "contentUrl": "https://via.placeholder.com/300x400.png",
                        "description": "A placeholder image."
                    }
                }
            },
            "ArticleObject": {
                "type": "object",
                "description": "Populated with the processed article data.",
                "properties": {
                    "@context": {
                        "type": "string",
                        "description": "Schema context; always the same value.",
                        "default": "https://schema.org",
                        "example": "https://schema.org"
                    },
                    "@type": {
                        "type": "string",
                        "description": "Schema type that represents this object; always the same value.",
                        "default": "Article",
                        "example": "Article"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The ID of the article in the data store.",
                        "example": 17
                    },
                    "author": {
                        "$ref": "#/components/schemas/objectAuthor"
                    },
                    "articleBody": {
                        "$ref": "#/components/schemas/objectArticleBody"
                    },
                    "abstract": {
                        "$ref": "#/components/schemas/objectAbstract"
                    },
                    "publisher": {
                        "$ref": "#/components/schemas/objectPublisher"
                    },
                    "datePublished": {
                        "$ref": "#/components/schemas/objectDatePublished"
                    },
                    "thumbnailUrl": {
                        "type": "string",
                        "description": "A URL to a featured image for the article.",
                        "example": "https://via.placeholder.com/300x400.png",
                        "nullable": true
                    },
                    "keywords": {
                        "$ref": "#/components/schemas/objectKeywords"
                    },
                    "sensitive": {
                        "type": "boolean",
                        "description": "Whether or not this article has been flagged as sensitive.",
                        "example": false
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/objectCreatedAt"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/objectUpdatedAt"
                    }
                }
            }
        },
        "examples": {
            "Location": {
                "value": {
                    "@context": "https://schema.org",
                    "@type": "Place",
                    "description": "An Oxfam charity shop",
                    "sensitive": true,
                    "updated_at": "2021-06-04T11:25:43.000000Z",
                    "created_at": "2021-06-04T11:25:43.000000Z",
                    "id": 17,
                    "address": {
                        "@context": "https://schema.org",
                        "@type": "PostalAddress",
                        "streetAddress": "8-10 Oldham Street",
                        "addressRegion": "Manchester",
                        "addressLocality": "Greater Manchester",
                        "addressCountry": "United Kingdom",
                        "postalCode": "M1 1JQ"
                    },
                    "geo": {
                        "@context": "https://schema.org",
                        "@type": "GeoCoordinates",
                        "coordinates": {
                            "lat": 53.481940,
                            "lon": -2.235999
                        }
                    },
                    "photo": {
                        "@context": "https://schema.org",
                        "@type": "ImageObject",
                        "contentUrl": "https://via.placeholder.com/300x400.png",
                        "description": "A placeholder image."
                    }
                }
            }
        }
    }
}
